<idea-plugin>
  <id>dev.turingcomplete.intellijbytecodeplugin</id>
  <name>Byte Code Analyzer</name>
  <vendor email="dev@marcelkliemannel.com" url="https://marcelkliemannel.com/projects/intellij-byte-code-plugin">Marcel Kliemannel</vendor>

  <description><![CDATA[
<p>This IntelliJ plugin provides a modern and powerful tool window to analyze byte code. Its supports Java, Kotlin, Groovy, and other JVM language class files. Based on ASM 9.7, it currently supports class files up to Java 23.</p>

<h2>Features</h2>

<p>(Please take a look at the <a href="https://github.com/marcelkliemannel/intellij-byte-code-plugin">README.md</a> to get a more detailed description and screenshots.)</p>

<h3>Class File Views</h3>
<ul>
  <li>The <b>Structure View</b> gives depth and human-readable insights into the individual elements of a given class file.</li>
  <li>The <b>Plain View</b> gives a textified representation of the byte code.</li>
  <li>The <b>ASM View</b> provides Java source code that contains all instructions to generate the class via the <a href="https://asm.ow2.io">ASM library</a>.</li>
  <li>The <b>Decompiled View</b> that provides the result of the de-compilation of the class file using IntelliJ's built-in decompilers.</li>
  <li>The <b>Constant Pool View</b> provides insights into the constant pool entries.</li>
</ul>

<h3>Byte Code Tools</h3>
<p>The following tools are providing a general way to better understand certain aspects of the byte code specification:</p>
<ul>
  <li>An <b>access Converter</b> to split the compressed access value into single readable values or calculate a compressed one.</li>
  <li>A <b>signature parser</b> to split a signature down into its components.</li>
  <li>A built-in <b>overview of all byte code instructions</b>.</li>
</ul>

<h3>Other</h3>
<ul>
  <li>Action to list all method frames, which are containing the state of the locals and the stack after each instruction.</li>
  <li>Action to verify the byte code of a class file.</li>
</ul>

<p>The tool window is available via <i>View | Tool Windows | Byte Code</i> and will be shown by default in the lower right corner of IntelliJ.</p>
<p>Class files can be either opened directly from the tool window or from the "Analyze Byte Code" action. This action is available in the project view and in the editor for JVM class or source files</p>
    ]]></description>

  <depends>com.intellij.modules.platform</depends>
  <depends>com.intellij.java</depends>
  <depends>org.jetbrains.kotlin</depends>

  <extensions defaultExtensionNs="org.jetbrains.kotlin">
    <supportsKotlinPluginMode supportsK2="true"/>
    <supportsKotlinK2Mode/>
  </extensions>

  <extensionPoints>
    <extensionPoint name="openClassFilesAction"
                    interface="dev.turingcomplete.intellijbytecodeplugin.openclassfiles.OpenClassFilesToolWindowAction"/>
    <extensionPoint name="byteCodeTool" interface="dev.turingcomplete.intellijbytecodeplugin.tool.ByteCodeTool"/>
    <extensionPoint name="byteCodeView"
                    interface="dev.turingcomplete.intellijbytecodeplugin.view.ByteCodeView$Creator"/>
    <extensionPoint name="byteCodeAction"
                    interface="dev.turingcomplete.intellijbytecodeplugin.view.ByteCodeAction"/>
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <applicationService
            serviceImplementation="dev.turingcomplete.intellijbytecodeplugin.settings.ByteCodeAnalyserSettingsService"/>

    <toolWindow id="Byte Code" factoryClass="dev.turingcomplete.intellijbytecodeplugin._ui.ByteCodeToolWindowFactory"
                anchor="right" canCloseContents="true" secondary="true" icon="/icons/toolwindow.svg"/>

    <notificationGroup displayType="BALLOON" id="dev.turingcomplete.intellijbytecodeplugin.notificationGroup"/>

    <getDataRule key="dev.turingcomplete.intellijbytecodeplugin.classFileContext"
                 implementationClass="dev.turingcomplete.intellijbytecodeplugin.common.CommonDataKeys$ClassFileContextDataRule"/>
    <getDataRule key="dev.turingcomplete.intellijbytecodeplugin.classFileTab"
                 implementationClass="dev.turingcomplete.intellijbytecodeplugin.common.CommonDataKeys$ClassFileTabDataRule"/>
    <getDataRule key="dev.turingcomplete.intellijbytecodeplugin.onError"
                 implementationClass="dev.turingcomplete.intellijbytecodeplugin.common.CommonDataKeys$OnErrorDataRule"/>
    <getDataRule key="dev.turingcomplete.intellijbytecodeplugin.openInEditor"
                 implementationClass="dev.turingcomplete.intellijbytecodeplugin.common.CommonDataKeys$OpenInEditorDataRule"/>
  </extensions>

  <extensions defaultExtensionNs="dev.turingcomplete.intellijbytecodeplugin">
    <openClassFilesAction
            implementation="dev.turingcomplete.intellijbytecodeplugin.openclassfiles._internal.CurrentEditorFileAction"/>
    <openClassFilesAction
            implementation="dev.turingcomplete.intellijbytecodeplugin.openclassfiles._internal.FileChooserAction"/>

    <byteCodeTool implementation="dev.turingcomplete.intellijbytecodeplugin.tool._internal.AccessConverterTool"/>
    <byteCodeTool implementation="dev.turingcomplete.intellijbytecodeplugin.tool._internal.SignatureParserTool"/>
    <byteCodeTool implementation="dev.turingcomplete.intellijbytecodeplugin.tool._internal.InstructionsOverviewTool"/>
    <byteCodeTool implementation="dev.turingcomplete.intellijbytecodeplugin.tool._internal.ClassVersionsOverviewTool"/>

    <byteCodeView
            implementation="dev.turingcomplete.intellijbytecodeplugin.view._internal._structure.StructureView$MyCreator"/>
    <byteCodeView
            implementation="dev.turingcomplete.intellijbytecodeplugin.view._internal.PlainView$MyCreator"/>
    <byteCodeView
            implementation="dev.turingcomplete.intellijbytecodeplugin.view._internal.AsmView$MyCreator"/>
    <byteCodeView
            implementation="dev.turingcomplete.intellijbytecodeplugin.view._internal._decompiler.DecompiledView$MyCreator"/>
    <byteCodeView
            implementation="dev.turingcomplete.intellijbytecodeplugin.view._internal._constantpool.ConstantPoolView$MyCreator"/>

    <byteCodeAction implementation="dev.turingcomplete.intellijbytecodeplugin.view._internal.ReParseByteCodeAction"/>
    <byteCodeAction implementation="dev.turingcomplete.intellijbytecodeplugin.view._internal.VerifyByteCodeAction"/>
  </extensions>

  <actions>
    <action popup="true" id="dev.turingcomplete.intellijbytecodeplugin.analyzeByteCodeAction"
            class="dev.turingcomplete.intellijbytecodeplugin.openclassfiles._internal.AnalyzeByteCodeAction">
      <add-to-group group-id="EditorPopupMenu" anchor="last"/>
      <add-to-group group-id="CodeMenu" anchor="last"/>
      <add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
    </action>
  </actions>
</idea-plugin>